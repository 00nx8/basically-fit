import{c as k,N as v,O as y,a as C,h as E,b as Q,G as x,H as g,J as o,P as b,I as r,K as t,L as c,S as m,T as d,U as u,V as l,W as _,X as p,Y as B,Q as $}from"./index-D7LHrqkT.js";import{W as w,E as h,a as A}from"./models-pZXpzrEA.js";import{Q as N,a as f}from"./QCard-BvaCKm32.js";import{Q as S}from"./QSeparator-DB1GNx_x.js";import{e as W}from"./state-DRLpWN3Z.js";import"./use-dark-hVWXkztj.js";const q=k({name:"QCardActions",props:{...v,vertical:Boolean},setup(i,{slots:e}){const n=y(i),s=C(()=>`q-card__actions ${n.value} q-card__actions--${i.vertical===!0?"vert column":"horiz row"}`);return()=>E("div",{class:s.value},Q(e.default))}}),P={class:"row items-center no-wrap"},V={class:"col"},z={class:"text-h6"},I=x({__name:"ExercisePreview",props:{exercise:{}},setup(i){const e=i;function n(){w.all().find(s=>s.exerciseId==e.exercise.id)?.delete(),h.get(e.exercise.id)?.delete(),A.all().forEach(s=>s.cleanseWorkouts()),W.value-=1}return(s,a)=>(o(),g(N,{flat:"",bordered:"",class:b(["my-card",s.$q.dark.isActive?"bg-grey-9":"bg-grey-2"])},{default:r(()=>[t(f,null,{default:r(()=>[c("div",P,[c("div",V,[c("div",z,m(e.exercise.name),1)])])]),_:1}),t(f,null,{default:r(()=>[d(m(e.exercise?.description),1)]),_:1}),t(S),t(q,null,{default:r(()=>[t(u,{to:{name:"editExercise",params:{id:e.exercise.id}},flat:""},{default:r(()=>a[0]||(a[0]=[d("Edit")])),_:1},8,["to"]),t(u,{flat:"",onClick:n},{default:r(()=>a[1]||(a[1]=[d("Delete")])),_:1})]),_:1})]),_:1},8,["class"]))}}),L={key:0,class:"col q-gutter-md"},D={key:1},M=x({__name:"ExerciseLibrary",setup(i){const e=h.all();return(n,s)=>(o(),l(p,null,[_(e).length?(o(),l("section",L,[(o(!0),l(p,null,B(_(e),a=>(o(),g(I,{exercise:a,key:a.id},null,8,["exercise"]))),128))])):(o(),l("p",D," No exercises yet... Make one !")),t(u,{to:{name:"editExercise",params:{id:0}},rounded:"",class:"fixed fixed-bottom-right z-marginals",style:{right:"1rem",bottom:"1rem"},color:"primary"},{default:r(()=>[t($,{name:"add"})]),_:1})],64))}});export{M as default};
