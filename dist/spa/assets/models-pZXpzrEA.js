var h=Object.defineProperty;var u=(s,t,e)=>t in s?h(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var c=(s,t,e)=>u(s,typeof t!="symbol"?t+"":t,e);import{E as d,n as m,at as p}from"./index-D7LHrqkT.js";class a{id;static all(){if(!this._all){const t=new Map,e=JSON.parse(localStorage.getItem("tcdb-"+this.name)||"[]").map(i=>Object.assign(Object.create(this.prototype),i));for(const i of e)this._maxId=Math.max(this._maxId,i.id),t.set(i.id,i);this._map=d(t),this._all=d(e);const r=()=>{const i=Array.from(this._map.values());localStorage.setItem("tcdb-"+this.name,JSON.stringify(i));let l=0;for(const o of i)this._maxId=Math.max(this._maxId,o.id||0),this._all[l++]=o;l<this._all.length&&this._all.splice(l,this._all.length-l)};r(),setTimeout(()=>{m(this._map,r,{deep:!0,immediate:!0})},0)}return this._all}static get(t){this.all();const e=this._map.get(t);if(e)return e}static create(t={},e=!0){const r=Object.assign(new this,t);return e?r.insert():r}delete(){if(!this.id)throw new Error("delete() called but id was not set");const t=this.constructor;t.all(),t._map.delete(this.id),console.log("deleted successfully")}insert(){const t=this.constructor;return t.all(),this.id||(this.id=++t._maxId),t._map.set(this.id,this),t._map.get(this.id)}clone(){return Object.assign(Object.create(this.constructor.prototype),p(this))}toString(){return`${this.constructor.name}:${this.id}`}}c(a,"_map"),c(a,"_all"),c(a,"_maxId",0);class n extends a{description;name}class f extends a{name;location;includedWorkouts=[];voiceNote;cleanseWorkouts(){this.includedWorkouts=this.includedWorkouts.filter(t=>t.exerciseId!==void 0&&n.get(t.exerciseId)!==void 0)}}class g extends a{reps;sets;exerciseId;exercise=()=>n.create({...n.get(this.exerciseId)},!1)}export{n as E,g as W,f as a};
